// Test generated by RoostGPT for test React_Unit_Test2 using AI Type Open AI and AI Model gpt-4


import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import { Form } from "antd";
import CustomerForm from './CustomerForm';

describe('CustomerForm', () => {
  let wrapper;

  beforeEach(() => {
    wrapper = render(<CustomerForm />);
  });

  test('renders form fields correctly', () => {
    expect(wrapper.getByLabelText('company Name')).toBeInTheDocument();
    expect(wrapper.getByLabelText('Surname')).toBeInTheDocument();
    expect(wrapper.getByLabelText('Name')).toBeInTheDocument();
    expect(wrapper.getByLabelText('Phone')).toBeInTheDocument();
    expect(wrapper.getByLabelText('E-mail')).toBeInTheDocument();
  });

  test('shows error messages when fields are empty', () => {
    fireEvent.submit(wrapper.getByRole('button', { name: /submit/i }));
    expect(wrapper.getByText('Please input your company name!')).toBeInTheDocument();
    expect(wrapper.getByText('Please input your surname!')).toBeInTheDocument();
    expect(wrapper.getByText('Please input your manager name!')).toBeInTheDocument();
    expect(wrapper.getByText('Please input your phone!')).toBeInTheDocument();
    expect(wrapper.getByText('Please input your E-mail!')).toBeInTheDocument();
  });

  test('shows error message when email is invalid', () => {
    fireEvent.change(wrapper.getByLabelText('E-mail'), { target: { value: 'invalid email' } });
    fireEvent.submit(wrapper.getByRole('button', { name: /submit/i }));
    expect(wrapper.getByText('The input is not valid E-mail!')).toBeInTheDocument();
  });
});
