// Test generated by RoostGPT for test React_Unit_Test2 using AI Type Open AI and AI Model gpt-4


import React from 'react';
import { render, fireEvent } from '@testing-library/react';
import { Form } from "antd";
import AdminForm from './AdminForm';

describe('AdminForm', () => {
  let getByTestId;

  beforeEach(() => {
    ({ getByTestId } = render(<AdminForm />));
  });

  test('renders email input', () => {
    const emailInput = getByTestId('email');
    expect(emailInput).toBeInTheDocument();
  });

  test('renders password input when not update form', () => {
    const passwordInput = getByTestId('password');
    expect(passwordInput).toBeInTheDocument();
  });

  test('does not render password input when update form', () => {
    ({ getByTestId } = render(<AdminForm isUpdateForm />));
    const passwordInput = getByTestId('password');
    expect(passwordInput).not.toBeInTheDocument();
  });

  test('renders name input', () => {
    const nameInput = getByTestId('name');
    expect(nameInput).toBeInTheDocument();
  });

  test('renders surname input', () => {
    const surnameInput = getByTestId('surname');
    expect(surnameInput).toBeInTheDocument();
  });

  test('shows error message when email is not provided', () => {
    const form = getByTestId('admin-form');
    fireEvent.submit(form);
    const errorMessage = getByTestId('error-message');
    expect(errorMessage).toHaveTextContent('Please input your Email!');
  });

  test('shows error message when password is not provided', () => {
    const form = getByTestId('admin-form');
    fireEvent.submit(form);
    const errorMessage = getByTestId('error-message');
    expect(errorMessage).toHaveTextContent('Please input your Password!');
  });
});
